{"version":3,"file":"static/js/39.6e68c9f4.chunk.js","mappings":"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","sources":["components/ResetPasswordPopup.jsx","widgets/LoginForm.jsx","pages/Login.jsx","ui/BasicCheckbox.jsx","../node_modules/react-spinners/esm/helpers/unitConverter.js","../node_modules/react-spinners/esm/helpers/animation.js","../node_modules/react-spinners/esm/ClipLoader.js"],"sourcesContent":["// components\r\nimport Popup from \"@components/Popup\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n// hooks\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n// utils\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Firebase Auth import\r\nimport { resetPasswordWithEmail } from \"../firebase/auth\";\r\n\r\nconst ResetPasswordPopup = ({ open, onClose }) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm();\r\n\r\n  const handleClose = () => {\r\n    reset();\r\n    onClose();\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    try {\r\n      await resetPasswordWithEmail(data.email);\r\n      toast.success(`A password reset link was sent to ${data.email}`);\r\n      handleClose();\r\n    } catch (error) {\r\n      console.error(\"Error sending password reset email:\", error);\r\n      toast.error(\r\n        \"Failed to send reset email. Please check the email address and try again.\"\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Popup open={open} onClose={handleClose}>\r\n      <div className=\"flex flex-col gap-5\">\r\n        <div className=\"flex flex-col gap-2.5\">\r\n          <h2>Reset Password</h2>\r\n          <p>\r\n            Enter your email address below and we'll send you a link to reset\r\n            your password.\r\n          </p>\r\n        </div>\r\n        <div className=\"flex flex-col gap-4\">\r\n          <form className=\"flex gap-2.5\" onSubmit={handleSubmit(onSubmit)}>\r\n            <input\r\n              className={classNames(\"field\", { \"field--error\": errors.email })}\r\n              type=\"text\"\r\n              placeholder=\"example@domain.com\"\r\n              {...register(\"email\", {\r\n                required: \"Email is required\",\r\n                pattern: {\r\n                  value: /^\\S+@\\S+$/i,\r\n                  message: \"Invalid email address\",\r\n                },\r\n              })}\r\n            />\r\n            <button className=\"btn\" type=\"submit\">\r\n              Send\r\n            </button>\r\n          </form>\r\n          {errors.email && (\r\n            <p className=\"error\" style={{ color: \"red\" }}>\r\n              {errors.email.message}\r\n            </p>\r\n          )}\r\n          <p className=\"text-12\">\r\n            If you don't receive an email within a few minutes, please check\r\n            your spam folder.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </Popup>\r\n  );\r\n};\r\n\r\nResetPasswordPopup.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ResetPasswordPopup;\r\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useNavigate, NavLink } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport classNames from \"classnames\";\r\nimport { ClipLoader } from \"react-spinners\";\r\n\r\nimport PasswordInput from \"@components/PasswordInput\";\r\nimport ResetPasswordPopup from \"@components/ResetPasswordPopup\";\r\nimport BasicCheckbox from \"@ui/BasicCheckbox\";\r\n\r\nimport {\r\n  signInWithGoogle,\r\n  signInWithEmail,\r\n  onAuthStateChanged,\r\n} from \"../firebase/auth\";\r\nimport GoogleIcon from \"../../src/assets/icons/google.svg\";\r\nimport { login, profile } from \"../features/users/userSlice\";\r\nimport { useCreateUserProfileMutation } from \"@api/UserProfle/userProfileApi\";\r\n\r\nconst LoginForm = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [googleLoading, setGoogleLoading] = useState(false);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    control,\r\n  } = useForm({\r\n    defaultValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n      rememberMe: false,\r\n    },\r\n  });\r\n\r\n  const [createUserProfile] = useCreateUserProfileMutation();\r\n\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleCreate = useCallback(\r\n    async (newProfileData) => {\r\n      try {\r\n        const createdProfile = await createUserProfile(newProfileData).unwrap();\r\n        return createdProfile.data;\r\n      } catch (error) {\r\n        console.error(\"Failed to create profile:\", error);\r\n      }\r\n    },\r\n    [createUserProfile]\r\n  );\r\n\r\n  const onSubmit = async (data) => {\r\n    setLoading(true);\r\n    try {\r\n      const userCredential = await signInWithEmail(data.email, data.password);\r\n\r\n      const createdProfile = await handleCreate({\r\n        User_ID: userCredential.uid,\r\n        Email: userCredential.email,\r\n        Name: userCredential.displayName,\r\n      });\r\n      console.log(\"createdProfile\", createdProfile);\r\n      dispatch(login(userCredential));\r\n      dispatch(profile(createdProfile));\r\n\r\n      toast.success(\"Signed in successfully!\");\r\n      navigate(\"/dashboard\");\r\n    } catch (error) {\r\n      toast.error(`Failed to sign in with email: ${error.message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleGoogleSignIn = async (e) => {\r\n    e.preventDefault();\r\n    setGoogleLoading(true);\r\n    try {\r\n      const userCredential = await signInWithGoogle();\r\n\r\n      const createdProfile = await handleCreate({\r\n        User_ID: userCredential.uid,\r\n        Email: userCredential.email,\r\n        Name: userCredential.displayName,\r\n      });\r\n\r\n      console.log(\"createdProfile\", createdProfile);\r\n      dispatch(login(userCredential));\r\n      dispatch(profile(createdProfile));\r\n\r\n      toast.success(\"Signed in with Google successfully!\");\r\n      navigate(\"/dashboard\");\r\n    } catch (error) {\r\n      toast.error(`Failed to sign in with Google: ${error.message}`);\r\n    } finally {\r\n      setGoogleLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(async (user) => {\r\n      if (user) {\r\n        try {\r\n          const createdProfile = await handleCreate({\r\n            User_ID: user.uid,\r\n            Email: user.email,\r\n            Name: user.displayName,\r\n          });\r\n\r\n          dispatch(login(user));\r\n          dispatch(profile(createdProfile));\r\n          navigate(\"/dashboard\");\r\n        } catch (error) {\r\n          console.error(\"Failed to create profile:\", error);\r\n        }\r\n      }\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [dispatch, handleCreate, navigate]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Account login</h1>\r\n      <form>\r\n        <div\r\n          className=\"flex flex-col gap-2.5\"\r\n          style={{ margin: \"20px 0 30px\" }}\r\n        >\r\n          <div className=\"flex flex-col gap-5\">\r\n            <input\r\n              className={classNames(\"field\", { \"field--error\": errors.email })}\r\n              type=\"text\"\r\n              placeholder=\"Login\"\r\n              {...register(\"email\", { required: true, pattern: /^\\S+@\\S+$/i })}\r\n            />\r\n            <Controller\r\n              control={control}\r\n              name=\"password\"\r\n              rules={{ required: true }}\r\n              render={({\r\n                field: { ref, onChange, value },\r\n                fieldState: { error },\r\n              }) => (\r\n                <PasswordInput\r\n                  className={classNames(\"field\", { \"field--error\": error })}\r\n                  value={value}\r\n                  onChange={(e) => onChange(e.target.value)}\r\n                  placeholder=\"Password\"\r\n                  innerRef={ref}\r\n                />\r\n              )}\r\n            />\r\n          </div>\r\n          <div className=\"flex items-center gap-2.5\">\r\n            <Controller\r\n              control={control}\r\n              name=\"rememberMe\"\r\n              render={({ field: { ref, onChange, value } }) => (\r\n                <BasicCheckbox\r\n                  id=\"rememberMe\"\r\n                  checked={value}\r\n                  onChange={(e) => onChange(e.target.checked)}\r\n                  innerRef={ref}\r\n                />\r\n              )}\r\n            />\r\n            <label htmlFor=\"rememberMe\">Remember me</label>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex justify-between items-center gap-4\">\r\n          <button\r\n            className=\"btn flex-1\"\r\n            type=\"submit\"\r\n            onClick={handleSubmit(onSubmit)}\r\n            disabled={loading}\r\n          >\r\n            {loading ? (\r\n              <ClipLoader size={20} color={\"#ffffff\"} />\r\n            ) : (\r\n              \"Sign In Now\"\r\n            )}\r\n          </button>\r\n          <button\r\n            onClick={handleGoogleSignIn}\r\n            className=\"btn btn--google flex-1\"\r\n            disabled={googleLoading}\r\n          >\r\n            {googleLoading ? (\r\n              <ClipLoader size={20} color={\"#ffffff\"} />\r\n            ) : (\r\n              <>\r\n                <img\r\n                  src={GoogleIcon}\r\n                  alt=\"Google Icon\"\r\n                  style={{ width: \"20px\" }}\r\n                />\r\n                Sign in with Google\r\n              </>\r\n            )}\r\n          </button>\r\n        </div>\r\n      </form>\r\n\r\n      <div className=\"flex justify-center\" style={{ marginTop: \"10px\" }}>\r\n        <p className=\"text-12\">\r\n          Don't have an account?{\" \"}\r\n          <NavLink\r\n            to=\"/sign-up\"\r\n            className=\"text-link text-decoration-underline\"\r\n          >\r\n            Create an account\r\n          </NavLink>\r\n        </p>\r\n      </div>\r\n\r\n      <ResetPasswordPopup open={open} onClose={() => setOpen(false)} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","// components\r\nimport AuthLayout from '@components/AuthLayout';\r\nimport LoginForm from '@widgets/LoginForm';\r\n\r\nconst Login = () => {\r\n    return (\r\n        <AuthLayout title=\"Login\">\r\n            <LoginForm/>\r\n        </AuthLayout>\r\n    );\r\n}\r\n\r\nexport default Login","// styling\r\nimport styled from 'styled-components';\r\n\r\n// utils\r\nimport PropTypes from 'prop-types';\r\n\r\nconst StyledCheckbox = styled.div`\r\n  position: relative;\r\n  width: 18px;\r\n  height: 18px;\r\n  border: 1px solid var(--border);\r\n  border-radius: 4px;\r\n  background: var(--widget);\r\n  flex-shrink: 0;\r\n\r\n  input {\r\n    display: none;\r\n\r\n    & + label {\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      display: block;\r\n      cursor: pointer;\r\n\r\n      &:after {\r\n        content: '';\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        width: 10px;\r\n        height: 10px;\r\n        background: ${({color}) => color ? `var(--${color})` : 'var(--highlight)'};\r\n        border-radius: 2px;\r\n        transform: translate(-50%, -50%);\r\n        transition: opacity var(--transition);\r\n        opacity: 0;\r\n      }\r\n    }\r\n\r\n    &:checked + label:after {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst BasicCheckbox = ({id, onChange, innerRef, color, ...props}) => {\r\n    return (\r\n        <StyledCheckbox className=\"flex items-center justify-center\" color={color}>\r\n            <input type=\"checkbox\" id={id} onChange={onChange} ref={innerRef} {...props}/>\r\n            <label htmlFor={id}/>\r\n        </StyledCheckbox>\r\n    )\r\n}\r\n\r\nBasicCheckbox.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func,\r\n    innerRef: PropTypes.func,\r\n    color: PropTypes.string\r\n}\r\n\r\nexport default BasicCheckbox","var cssUnit = {\n    cm: true,\n    mm: true,\n    in: true,\n    px: true,\n    pt: true,\n    pc: true,\n    em: true,\n    ex: true,\n    ch: true,\n    rem: true,\n    vw: true,\n    vh: true,\n    vmin: true,\n    vmax: true,\n    \"%\": true,\n};\n/**\n * If size is a number, append px to the value as default unit.\n * If size is a string, validate against list of valid units.\n * If unit is valid, return size as is.\n * If unit is invalid, console warn issue, replace with px as the unit.\n *\n * @param {(number | string)} size\n * @return {LengthObject} LengthObject\n */\nexport function parseLengthAndUnit(size) {\n    if (typeof size === \"number\") {\n        return {\n            value: size,\n            unit: \"px\",\n        };\n    }\n    var value;\n    var valueString = (size.match(/^[0-9.]*/) || \"\").toString();\n    if (valueString.includes(\".\")) {\n        value = parseFloat(valueString);\n    }\n    else {\n        value = parseInt(valueString, 10);\n    }\n    var unit = (size.match(/[^0-9]*$/) || \"\").toString();\n    if (cssUnit[unit]) {\n        return {\n            value: value,\n            unit: unit,\n        };\n    }\n    console.warn(\"React Spinners: \".concat(size, \" is not a valid css value. Defaulting to \").concat(value, \"px.\"));\n    return {\n        value: value,\n        unit: \"px\",\n    };\n}\n/**\n * Take value as an input and return valid css value\n *\n * @param {(number | string)} value\n * @return {string} valid css value\n */\nexport function cssValue(value) {\n    var lengthWithunit = parseLengthAndUnit(value);\n    return \"\".concat(lengthWithunit.value).concat(lengthWithunit.unit);\n}\n","export var createAnimation = function (loaderName, frames, suffix) {\n    var animationName = \"react-spinners-\".concat(loaderName, \"-\").concat(suffix);\n    if (typeof window == \"undefined\" || !window.document) {\n        return animationName;\n    }\n    var styleEl = document.createElement(\"style\");\n    document.head.appendChild(styleEl);\n    var styleSheet = styleEl.sheet;\n    var keyFrames = \"\\n    @keyframes \".concat(animationName, \" {\\n      \").concat(frames, \"\\n    }\\n  \");\n    if (styleSheet) {\n        styleSheet.insertRule(keyFrames, 0);\n    }\n    return animationName;\n};\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { cssValue } from \"./helpers/unitConverter\";\nimport { createAnimation } from \"./helpers/animation\";\nvar clip = createAnimation(\"ClipLoader\", \"0% {transform: rotate(0deg) scale(1)} 50% {transform: rotate(180deg) scale(0.8)} 100% {transform: rotate(360deg) scale(1)}\", \"clip\");\nfunction ClipLoader(_a) {\n    var _b = _a.loading, loading = _b === void 0 ? true : _b, _c = _a.color, color = _c === void 0 ? \"#000000\" : _c, _d = _a.speedMultiplier, speedMultiplier = _d === void 0 ? 1 : _d, _e = _a.cssOverride, cssOverride = _e === void 0 ? {} : _e, _f = _a.size, size = _f === void 0 ? 35 : _f, additionalprops = __rest(_a, [\"loading\", \"color\", \"speedMultiplier\", \"cssOverride\", \"size\"]);\n    var style = __assign({ background: \"transparent !important\", width: cssValue(size), height: cssValue(size), borderRadius: \"100%\", border: \"2px solid\", borderTopColor: color, borderBottomColor: \"transparent\", borderLeftColor: color, borderRightColor: color, display: \"inline-block\", animation: \"\".concat(clip, \" \").concat(0.75 / speedMultiplier, \"s 0s infinite linear\"), animationFillMode: \"both\" }, cssOverride);\n    if (!loading) {\n        return null;\n    }\n    return React.createElement(\"span\", __assign({ style: style }, additionalprops));\n}\nexport default ClipLoader;\n"],"names":["_ref","open","onClose","register","handleSubmit","formState","errors","reset","useForm","handleClose","_jsx","Popup","children","_jsxs","className","onSubmit","async","resetPasswordWithEmail","data","email","toast","success","error","console","classNames","type","placeholder","required","pattern","value","message","style","color","LoginForm","setOpen","useState","loading","setLoading","googleLoading","setGoogleLoading","control","defaultValues","password","rememberMe","createUserProfile","useCreateUserProfileMutation","navigate","useNavigate","dispatch","useDispatch","handleCreate","useCallback","newProfileData","unwrap","useEffect","unsubscribe","onAuthStateChanged","user","createdProfile","User_ID","uid","Email","Name","displayName","login","profile","_Fragment","margin","Controller","name","rules","render","field","ref","onChange","fieldState","PasswordInput","e","target","innerRef","_ref2","BasicCheckbox","id","checked","htmlFor","onClick","userCredential","signInWithEmail","log","disabled","ClipLoader","size","preventDefault","signInWithGoogle","src","GoogleIcon","alt","width","marginTop","NavLink","to","ResetPasswordPopup","Login","AuthLayout","title","StyledCheckbox","styled","div","props","cssUnit","cm","mm","in","px","pt","pc","em","ex","ch","rem","vw","vh","vmin","vmax","cssValue","lengthWithunit","unit","valueString","match","toString","includes","parseFloat","parseInt","warn","concat","parseLengthAndUnit","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","indexOf","getOwnPropertySymbols","propertyIsEnumerable","clip","loaderName","frames","suffix","animationName","window","document","styleEl","createElement","head","appendChild","styleSheet","sheet","keyFrames","insertRule","createAnimation","_a","_b","_c","_d","speedMultiplier","_e","cssOverride","_f","additionalprops","background","height","borderRadius","border","borderTopColor","borderBottomColor","borderLeftColor","borderRightColor","display","animation","animationFillMode","React"],"sourceRoot":""}